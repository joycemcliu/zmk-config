/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

&led_strip {
    chain-length = <27>;

    // 21 backlight + 6 glowlight
};

&mt {
    tapping-term-ms = <240>;
    flavor = "hold-preferred";
};

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp ESCAPE        &kp Q               &kp W           &kp E               &kp R             &kp T    &kp Y   &kp U              &kp I                &kp O            &kp P                   &kp BSPC
&kp TAB           &mt LEFT_CONTROL A  &mt LEFT_ALT S  &mt LEFT_COMMAND D  &mt LEFT_SHIFT F  &kp G    &kp H   &mt RIGHT_SHIFT J  &mt RIGHT_COMMAND K  &mt RIGHT_ALT L  &mt RIGHT_CONTROL SEMI  &kp ENTER
&kp LEFT_COMMAND  &kp Z               &kp X           &kp C               &kp V             &kp B    &kp N   &kp M              &kp COMMA            &kp DOT          &kp FSLH                &kp RIGHT_COMMAND
                                                      &to 0               &mo 3             &mo 2    &tog 1  &kp SPACE          &kp CAPS
            >;
        };

        Nav1 {
            bindings = <
&trans  &trans            &kp LG(LC(W))  &kp LG(LC(LEFT_BRACKET))  &kp LC(LG(RIGHT_BRACKET))  &trans    &trans  &trans    &kp UP_ARROW  &trans     &trans  &trans
&trans  &kp LEFT_CONTROL  &kp LEFT_ALT   &kp LEFT_COMMAND          &kp LEFT_SHIFT             &trans    &trans  &kp LEFT  &kp DOWN      &kp RIGHT  &trans  &trans
&trans  &trans            &trans         &trans                    &trans                     &trans    &trans  &trans    &trans        &trans     &trans  &trans
                                         &trans                    &trans                     &trans    &trans  &to 0     &trans
            >;
        };

        Nav2 {
            bindings = <
&trans  &trans            &kp LG(LC(W))  &kp LG(LC(LEFT_BRACKET))  &kp LC(LG(RIGHT_BRACKET))  &trans    &trans  &trans   &kp F18  &trans   &trans  &trans
&trans  &kp LEFT_CONTROL  &kp LEFT_ALT   &kp LEFT_COMMAND          &kp LEFT_SHIFT             &mo 1     &trans  &kp F16  &kp F17  &kp F19  &trans  &trans
&trans  &trans            &trans         &trans                    &trans                     &trans    &trans  &trans   &trans   &trans   &trans  &trans
                                         &trans                    &trans                     &trans    &trans  &to 0    &trans
            >;
        };

        Symbol1 {
            bindings = <
&trans         &trans  &trans  &trans  &trans  &tog 6    &kp MINUS        &kp EQUAL             &kp LEFT_BRACKET  &kp ASTERISK       &kp GRAVE             &kp F13
&trans         &trans  &trans  &mo 5   &mo 4   &trans    &kp LEFT_BRACE   &kp LEFT_PARENTHESIS  &kp COLON         &kp DOUBLE_QUOTES  &kp NON_US_BACKSLASH  &trans
&kp LC(SPACE)  &trans  &trans  &trans  &trans  &trans    &kp EXCLAMATION  &kp AMPERSAND         &kp COMMA         &kp PERIOD         &kp SLASH             &kp LCTRL
                               &trans  &trans  &trans    &trans           &trans                &trans
            >;
        };

        symbol2 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &kp UNDERSCORE   &kp PLUS               &kp RIGHT_BRACKET  &kp PERCENT       &kp TILDE     &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp RIGHT_BRACE  &kp RIGHT_PARENTHESIS  &kp SEMICOLON      &kp SQT           &kp PIPE      &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp AT_SIGN      &kp HASH               &kp LESS_THAN      &kp GREATER_THAN  &kp QUESTION  &kp DOLLAR
                        &trans  &trans  &trans    &trans           &trans                 &trans
            >;
        };

        Number {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans     &kp N7        &kp N8        &kp N9        &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp LC(G)  &kp NUMBER_4  &kp N5        &kp NUMBER_6  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp N0     &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans
                        &trans  &trans  &trans    &trans     &trans        &trans
            >;
        };

        system {
            bindings = <
&soft_off  &ext_power EP_TOG  &trans      &trans      &trans      &trans       &trans  &rgb_ug RGB_EFR  &rgb_ug RGB_EFF  &rgb_ug RGB_TOG  &trans  &trans
&trans     &out OUT_TOG       &bt BT_PRV  &bt BT_NXT  &bt BT_CLR  &soft_off    &trans  &bl BL_TOG       &bl BL_CYCLE     &trans           &trans  &trans
&trans     &trans             &trans      &trans      &trans      &trans       &trans  &trans           &trans           &trans           &trans  &trans
                                          &trans      &trans      &trans       &trans  &trans           &trans
            >;
        };
    };
};
